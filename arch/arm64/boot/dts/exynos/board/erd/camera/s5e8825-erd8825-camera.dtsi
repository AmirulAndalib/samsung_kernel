/*
 * Samsung Exynos SoC series Pablo driver
 *
 * Copyright (c) 2020 Samsung Electronics Co., Ltd
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#include <dt-bindings/camera/exynos_is_dt.h>

#include "module_2l4.dtsi"
#include "module_3m5.dtsi"
#include "module_3p9.dtsi"
#include "module_3h1_26m.dtsi"

/ {
	fragment@camera {
		target-path = "/";
		__overlay__ {
			#address-cells = <2>;
			#size-cells = <1>;
			interrupt-parent = <&gic>;

			/* REAR CAMERA */
			is_sensor_2l4: is_sensor_2l4@20 {
				pinctrl-names = "pin0", "pin1", "pin2", "release";
				pinctrl-0 = <>;
				pinctrl-1 = <&sensor_mclk0_out>;
				pinctrl-2 = <&sensor_mclk0_fn>;
				pinctrl-3 = <>;

				/* board */
				position = <0>;	/* Rear:0. Front:1. Rear_sub:2. Secure:3. */
				id = <0>; /* is_sensor id */
				mclk_ch = <0>;
				sensor_i2c_ch = <1>; /* SENSOR_CONTROL_I2C1 */

				/* peri */
				af {
					product_name = <18>; /* ACTUATOR_NAME_AK737X : ak7371 or ak7374 */
					i2c_ch = <3>; /* SENSOR_CONTROL_I2C3 */
				};

				flash {
					product_name = <19>; /* S2MF301 */
				};

				ois {
					product_name = <100>; /* NOTHING */
				};

				vc_extra {
					/* ex) statX = <stat_type, sensor_mode, max_width, max_height, max_element> */
					stat0 = </* not avaliable */>;									/* VC_BUF_DATA_TYPE_SENSOR_STAT1 */
					stat1 = </*VC_STAT_TYPE_PDP_3_1_PDAF_STAT0*/ 1000 /*VC_SENSOR_MODE_2PD_MODE3*/ 102 1756 1 1>;	/* VC_BUF_DATA_TYPE_GENERAL_STAT1 */
					stat2 = </* not avaliable */>;									/* VC_BUF_DATA_TYPE_SENSOR_STAT2 */
					stat3 = </*VC_STAT_TYPE_PDP_3_1_PDAF_STAT1*/ 1001 /*VC_SENSOR_MODE_2PD_MODE3*/ 102 39424 1 1>;	/* VC_BUF_DATA_TYPE_GENERAL_STAT2 */
				};

				modes {
					mode0 {
						common = <4032 3024 30 0 0 CSI_DATA_LANES_4 2054 CSI_MODE_VC_DT LRTE_DISABLE PD_MOD3 EX_NONE>;
						vc3 = </* in */ 0 HW_FORMAT_EMBEDDED_8BIT 0 0	/* out */ HW_FORMAT_USER VC_PRIVATE 1756 1>;
					};
					mode1 {
						common = <4032 2268 60 0 1 CSI_DATA_LANES_4 2177 CSI_MODE_VC_DT LRTE_DISABLE PD_MOD3 EX_NONE>;
						vc3 = </* in */ 0 HW_FORMAT_EMBEDDED_8BIT 0 0	/* out */ HW_FORMAT_USER VC_PRIVATE 1756 1>;
					};
					mode2 {
						common = <4032 2268 30 0 2 CSI_DATA_LANES_4 2054 CSI_MODE_VC_DT LRTE_DISABLE PD_MOD3 EX_NONE>;
						vc3 = </* in */ 0 HW_FORMAT_EMBEDDED_8BIT 0 0	/* out */ HW_FORMAT_USER VC_PRIVATE 1756 1>;
					};
					mode3 {
						common = <4032 1908 30 0 3 CSI_DATA_LANES_4 2054 CSI_MODE_VC_DT LRTE_DISABLE PD_MOD3 EX_NONE>;
						vc3 = </* in */ 0 HW_FORMAT_EMBEDDED_8BIT 0 0	/* out */ HW_FORMAT_USER VC_PRIVATE 1756 1>;
					};
					mode4 {
						common = <3024 3024 30 0 4 CSI_DATA_LANES_4 2054 CSI_MODE_VC_DT LRTE_DISABLE PD_MOD3 EX_NONE>;
						vc3 = </* in */ 0 HW_FORMAT_EMBEDDED_8BIT 0 0	/* out */ HW_FORMAT_USER VC_PRIVATE 1756 1>;
					};
					mode5 {
						common = <2016 1512 30 0 5 CSI_DATA_LANES_4 1352 CSI_MODE_VC_DT LRTE_DISABLE PD_MOD3 EX_NONE>;
						vc3 = </* in */ 0 HW_FORMAT_EMBEDDED_8BIT 0 0	/* out */ HW_FORMAT_USER VC_PRIVATE 1756 1>;
					};
					mode6 {
						common = <2016 1134 30 0 6 CSI_DATA_LANES_4 1352 CSI_MODE_VC_DT LRTE_DISABLE PD_MOD3 EX_NONE>;
						vc3 = </* in */ 0 HW_FORMAT_EMBEDDED_8BIT 0 0	/* out */ HW_FORMAT_USER VC_PRIVATE 1756 1>;
					};
					mode7 {
						common = <1504 1504 30 0 7 CSI_DATA_LANES_4 1352 CSI_MODE_VC_DT LRTE_DISABLE PD_MOD3 EX_NONE>;
						vc3 = </* in */ 0 HW_FORMAT_EMBEDDED_8BIT 0 0	/* out */ HW_FORMAT_USER VC_PRIVATE 1756 1>;
					};
					/* MODE 3 - 24fps LIVE FOCUS */
					mode8 {
						common = <4032 3024 24 0 8 CSI_DATA_LANES_4 2054 CSI_MODE_VC_DT LRTE_DISABLE PD_MOD3 EX_LIVEFOCUS>;
						vc3 = </* in */ 0 HW_FORMAT_EMBEDDED_8BIT 0 0	/* out */ HW_FORMAT_USER VC_PRIVATE 1756 1>;
					};
					mode9 {
						common = <4032 2268 24 0 9 CSI_DATA_LANES_4 2054 CSI_MODE_VC_DT LRTE_DISABLE PD_MOD3 EX_LIVEFOCUS>;
						vc3 = </* in */ 0 HW_FORMAT_EMBEDDED_8BIT 0 0	/* out */ HW_FORMAT_USER VC_PRIVATE 1756 1>;
					};
					mode10 {
						common = <4032 1908 24 0 10 CSI_DATA_LANES_4 2054 CSI_MODE_VC_DT LRTE_DISABLE PD_MOD3 EX_LIVEFOCUS>;
						vc3 = </* in */ 0 HW_FORMAT_EMBEDDED_8BIT 0 0	/* out */ HW_FORMAT_USER VC_PRIVATE 1756 1>;
					};
					mode11 {
						common = <3024 3024 24 0 11 CSI_DATA_LANES_4 2054 CSI_MODE_VC_DT LRTE_DISABLE PD_MOD3 EX_LIVEFOCUS>;
						vc3 = </* in */ 0 HW_FORMAT_EMBEDDED_8BIT 0 0	/* out */ HW_FORMAT_USER VC_PRIVATE 1756 1>;
					};
					/* MODE 2 */
					mode12 {
						common = <2016 1134 240 0 12 CSI_DATA_LANES_4 2054 CSI_MODE_VC_DT LRTE_DISABLE PD_NONE EX_NONE>;
						vc3 = </* in */ 0 HW_FORMAT_EMBEDDED_8BIT 0 0	/* out */ HW_FORMAT_UNKNOWN VC_NOTHING 0 0>;
					};
					mode13 {
						common = <1008 756 120 0 13 CSI_DATA_LANES_4 2054 CSI_MODE_VC_DT LRTE_DISABLE PD_NONE EX_NONE>;
						vc3 = </* in */ 0 HW_FORMAT_EMBEDDED_8BIT 0 0	/* out */ HW_FORMAT_UNKNOWN VC_NOTHING 0 0>;
					};
				};

				power_seq {
					use = <1>;
					gpio_mclk = <&gpg0 2 0x1>;

					scenario_normal_on {
						sensor_scenario = <SENSOR_SCENARIO_NORMAL>;
						gpio_scenario = <GPIO_SCENARIO_ON>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 0>; gpio = <&gpg1 0 0x1>; };
						20 { pname = "S2MPB03_LD04"; pin = <PIN_REGULATOR 1 1 1025000>; };
						30 { pname = "VDDA_2.8V_SUB"; pin = <PIN_REGULATOR 1 0>; };
						40 { pname = "VDDA_2.8V_CAM"; pin = <PIN_REGULATOR 1 1>; };
						50 { pname = "VDDD_1.05V_SUB"; pin = <PIN_REGULATOR 1 1>; };
						60 { pname = "VDD_VM_2.8V_OIS"; pin = <PIN_REGULATOR 1 1>; };
						70 { pname = "VDDIO_1.8V_CAM"; pin = <PIN_REGULATOR 1 1>; };
						80 { pname = "VDDAF_COMMON_CAM"; pin = <PIN_REGULATOR 1 1>; };
						90 { pname = "VDDD_1.05V_CAM"; pin = <PIN_REGULATOR 1 1000>; };
						100 { pname; pin; };
						110 { pname = "on_i2c"; pin = <PIN_I2C 1 0>; };
						120 { pname = "pin"; pin = <PIN_FUNCTION 2 0>; };
						130 { pname = "MCLK"; pin = <PIN_MCLK 1 1500>; share = <SRT_ACQUIRE SHARED_PIN0 1>; };
						140 { pname = "sen_rst high"; pin = <PIN_OUTPUT 1 3000>; gpio = <&gpg1 0 0x1>; };
						150 { pname; pin; gpio; };
					};

					scenario_vision_on {
						sensor_scenario = <SENSOR_SCENARIO_VISION>;
						gpio_scenario = <GPIO_SCENARIO_ON>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 0>; gpio = <&gpg1 0 0x1>; };
						20 { pname = "S2MPB03_LD04"; pin = <PIN_REGULATOR 1 1 1025000>; };
						30 { pname = "VDDA_2.8V_SUB"; pin = <PIN_REGULATOR 1 0>; };
						40 { pname = "VDDA_2.8V_CAM"; pin = <PIN_REGULATOR 1 1>; };
						50 { pname = "VDDD_1.05V_SUB"; pin = <PIN_REGULATOR 1 1>; };
						60 { pname = "VDD_VM_2.8V_OIS"; pin = <PIN_REGULATOR 1 1>; };
						70 { pname = "VDDIO_1.8V_CAM"; pin = <PIN_REGULATOR 1 1>; };
						80 { pname = "VDDAF_COMMON_CAM"; pin = <PIN_REGULATOR 1 1>; };
						90 { pname = "VDDD_1.05V_CAM"; pin = <PIN_REGULATOR 1 1000>; };
						100 { pname; pin; };
						110 { pname = "on_i2c"; pin = <PIN_I2C 1 0>; };
						120 { pname = "pin"; pin = <PIN_FUNCTION 2 0>; };
						130 { pname = "MCLK"; pin = <PIN_MCLK 1 1500>; share = <SRT_ACQUIRE SHARED_PIN0 1>; };
						140 { pname = "sen_rst high"; pin = <PIN_OUTPUT 1 3000>; gpio = <&gpg1 0 0x1>; };
						150 { pname; pin; gpio; };
					};

					scenario_hw_init_normal_on {
						/* HW INIT (without ois power control) */
						sensor_scenario = <SENSOR_SCENARIO_HW_INIT>;
						gpio_scenario = <GPIO_SCENARIO_ON>;

						10 { pname; pin; gpio; };
						20 { pname; pin; gpio; };
						30 { pname; pin; gpio; };
						40 { pname; pin; gpio; };
						50 { pname; pin; gpio; };
						60 { pname; pin; gpio; };
						70 { pname; pin; gpio; };
						80 { pname; pin; gpio; };
						90 { pname; pin; gpio; };
						100 { pname; pin; gpio; };
						110 { pname; pin; gpio; };
						120 { pname; pin; gpio; };
					};

					scenario_normal_off {
						sensor_scenario = <SENSOR_SCENARIO_NORMAL>;
						gpio_scenario = <GPIO_SCENARIO_OFF>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "VDD_VM_2.8V_OIS"; pin = <PIN_REGULATOR 0 10>; };
						20 { pname = "VDDD_1.05V_CAM"; pin = <PIN_REGULATOR 0 1>; };
						30 { pname = "VDDD_1.05V_SUB"; pin = <PIN_REGULATOR 0 10>; };
						40 { pname = "VDDA_2.8V_SUB"; pin = <PIN_REGULATOR 0 0>; };
						50 { pname = "VDDA_2.8V_CAM"; pin = <PIN_REGULATOR 0 0>; };
						60 { pname = "MCLK"; pin = <PIN_MCLK 0 0>; share = <SRT_RELEASE SHARED_PIN0 0>; };
						70 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
						80 { pname = "pin"; pin = <PIN_FUNCTION 1 0>; };
						90 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
						100 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 10>; gpio = <&gpg1 0 0x1>; };
						110 { pname; pin; gpio; };
						120 { pname = "off_i2c"; pin = <PIN_I2C 0 0>; };
						130 { pname; pin; gpio; };
						140 { pname = "VDDAF_COMMON_CAM"; pin = <PIN_REGULATOR 0 0>; };
						150 { pname = "S2MPB03_LD04"; pin = <PIN_REGULATOR 0 100>; };
						160 { pname = "VDDIO_1.8V_CAM"; pin = <PIN_REGULATOR 0 10>; };
					};

					scenario_vision_off {
						sensor_scenario = <SENSOR_SCENARIO_VISION>;
						gpio_scenario = <GPIO_SCENARIO_OFF>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "VDD_VM_2.8V_OIS"; pin = <PIN_REGULATOR 0 10>; };
						20 { pname = "VDDD_1.05V_CAM"; pin = <PIN_REGULATOR 0 1>; };
						30 { pname = "VDDD_1.05V_SUB"; pin = <PIN_REGULATOR 0 10>; };
						40 { pname = "VDDA_2.8V_SUB"; pin = <PIN_REGULATOR 0 0>; };
						50 { pname = "VDDA_2.8V_CAM"; pin = <PIN_REGULATOR 0 0>; };
						60 { pname = "MCLK"; pin = <PIN_MCLK 0 0>; share = <SRT_RELEASE SHARED_PIN0 0>; };
						70 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
						80 { pname = "pin"; pin = <PIN_FUNCTION 1 0>; };
						90 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
						100 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 10>; gpio = <&gpg1 0 0x1>; };
						110 { pname; pin; gpio; };
						120 { pname = "off_i2c"; pin = <PIN_I2C 0 0>; };
						130 { pname; pin; gpio; };
						140 { pname = "VDDAF_COMMON_CAM"; pin = <PIN_REGULATOR 0 0>; };
						150 { pname = "S2MPB03_LD04"; pin = <PIN_REGULATOR 0 100>; };
						160 { pname = "VDDIO_1.8V_CAM"; pin = <PIN_REGULATOR 0 10>; };
					};

					scenario_retention_on {
						sensor_scenario = <SENSOR_SCENARIO_NORMAL>;
						gpio_scenario = <GPIO_SCENARIO_SENSOR_RETENTION_ON>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname; pin; gpio; };
						20 { pname; pin; gpio; };
						30 { pname; pin; gpio; };
						40 { pname; pin; gpio; };
						50 { pname; pin; gpio; };
						60 { pname; pin; gpio; };
						70 { pname; pin; gpio; };
						80 { pname; pin; gpio; };
						90 { pname; pin; gpio; };
						100 { pname; pin; gpio; };
						110 { pname; pin; gpio; };
						120 { pname; pin; gpio; };
						130 { pname; pin; gpio; };
						140 { pname; pin; gpio; };
						150 { pname; pin; gpio; };
					};

					scenario_hw_init_retention_on {
						/* RETENTION ON HW INIT(without ois power control) */
						sensor_scenario = <SENSOR_SCENARIO_HW_INIT>;
						gpio_scenario = <GPIO_SCENARIO_SENSOR_RETENTION_ON>;

						10 { pname; pin; gpio; };
						20 { pname; pin; gpio; };
						30 { pname; pin; gpio; };
						40 { pname; pin; gpio; };
						50 { pname; pin; gpio; };
						60 { pname; pin; gpio; };
						70 { pname; pin; gpio; };
						80 { pname; pin; gpio; };
						90 { pname; pin; gpio; };
						100 { pname; pin; gpio; };
						110 { pname; pin; gpio; };
						120 { pname; pin; gpio; };
					};

					scenario_ois_factory_on {
						sensor_scenario = <SENSOR_SCENARIO_OIS_FACTORY>;
						gpio_scenario = <GPIO_SCENARIO_ON>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname; pin; gpio; };
						20 { pname; pin; gpio; };
						30 { pname; pin; gpio; };
						40 { pname; pin; gpio; };
						50 { pname; pin; gpio; };
						60 { pname; pin; gpio; };
						70 { pname; pin; gpio; };
					};

					scenario_ois_factory_off {
						sensor_scenario = <SENSOR_SCENARIO_OIS_FACTORY>;
						gpio_scenario = <GPIO_SCENARIO_OFF>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname; pin; gpio; };
						20 { pname; pin; gpio; };
						30 { pname; pin; gpio; };
						40 { pname; pin; gpio; };
						50 { pname; pin; gpio; };
						60 { pname; pin; gpio; };
						70 { pname; pin; gpio; };
					};

					scenario_read_rom_on {
						sensor_scenario = <SENSOR_SCENARIO_READ_ROM>;
						gpio_scenario = <GPIO_SCENARIO_ON>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname; pin; gpio; };
						20 { pname; pin; gpio; };
						30 { pname; pin; gpio; };
						40 { pname; pin; gpio; };
					};

					scenario_read_rom_off {
						sensor_scenario = <SENSOR_SCENARIO_READ_ROM>;
						gpio_scenario = <GPIO_SCENARIO_OFF>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname; pin; gpio; };
						20 { pname; pin; gpio; };
						30 { pname; pin; gpio; };
						40 { pname; pin; gpio; };
					};
				};
			};

			/* Tele CAMERA */
			is_sensor_3m5: is_sensor_3m5@64 {
				pinctrl-names = "pin0", "pin1", "pin2", "release";
				pinctrl-0 = <>;
				pinctrl-1 = <&sensor_mclk0_out>;
				pinctrl-2 = <&sensor_mclk0_fn>;
				pinctrl-3 = <>;

				/* board */
				position = <2>; /* Rear:0. Front:1, Tele:2 */
				id = <2>; /* is_sensor id */
				mclk_ch = <0>;
				sensor_i2c_ch = <0>; /* SENSOR_CONTROL_I2C0 */

				af {
					product_name = <18>; /* ACTUATOR_NAME_AK737X : ak7371 or ak7374 or ak7377*/
					i2c_ch = <3>; /* SENSOR_CONTROL_I2C3 */
				};

				flash {
					product_name = <100>; /* NOTHING */
				};

				preprocessor {
					product_name = <100>; /* NOTHING */
				};

				vc_extra {
					/* ex) statX = <stat_type, sensor_mode, max_width, max_height, max_element> */
					stat0 = </* not avaliable */>;			/* VC_BUF_DATA_TYPE_SENSOR_STAT1 */
					stat1 = </* not avaliable */>;			/* VC_BUF_DATA_TYPE_SENSOR_STAT1 */
					stat2 = </* not avaliable */>;			/* VC_BUF_DATA_TYPE_SENSOR_STAT2 */
					stat3 = </* not avaliable */>;			/* VC_BUF_DATA_TYPE_SENSOR_STAT2 */
				};

				/* sensor modes */
				modes {
					/* common = <width, height, fps, settle, mode, lane, speed, interleave, lrte, pd_mode> */
					/* vcX = <map, hwformat, width, height, hwformat, type, width, height> */
					mode0 {
						common = <2592 1944 30 0 0 CSI_DATA_LANES_2 1456 CSI_MODE_VC_DT LRTE_DISABLE PD_NONE EX_NONE>;
						vc0 = </* in */ 0 HW_FORMAT_RAW10 2592 1944     /* out */ HW_FORMAT_AND10 VC_NOTHING 2592 1944>;
						vc1 = </* in */ 1 HW_FORMAT_UNKNOWN 0 0         /* out */ HW_FORMAT_UNKNOWN VC_NOTHING 0 0>;
					};
				};

				power_seq {
					use = <1>;
					gpio_mclk = <&gpg0 2 0x1>;

					scenario_normal_on {
						sensor_scenario = <SENSOR_SCENARIO_NORMAL>;
						gpio_scenario = <GPIO_SCENARIO_ON>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 0>; gpio = <&gpg1 1 0x1>; };
						20 { pname = "VDDAF_2.8V_SUB"; pin = <PIN_REGULATOR 1 1>; };
						30 { pname = "VDDPHY_1.05V_CAM"; pin = <PIN_REGULATOR 1 1>; };
						40 { pname = "S2MPB02_LD15"; pin = <PIN_REGULATOR 1 1>; };
						50 { pname = "VDDIO_1.8V_SUB"; pin = <PIN_REGULATOR 1 1000>; };
						60 { pname = "on_i2c"; pin = <PIN_I2C 1 0>; };
						70 { pname = "sen_rst high"; pin = <PIN_OUTPUT 1 0>; gpio = <&gpg1 1 0x1>; };
						80 { pname = "pin"; pin = <PIN_FUNCTION 2 0>; };
						90 { pname = "MCLK"; pin = <PIN_MCLK 1 1000>; share = <SRT_ACQUIRE SHARED_PIN0 1>; };
					};

					scenario_vision_on {
						sensor_scenario = <SENSOR_SCENARIO_VISION>;
						gpio_scenario = <GPIO_SCENARIO_ON>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 0>; gpio = <&gpg1 1 0x1>; };
						20 { pname = "VDDAF_2.8V_SUB"; pin = <PIN_REGULATOR 1 1>; };
						30 { pname = "VDDPHY_1.05V_CAM"; pin = <PIN_REGULATOR 1 1>; };
						40 { pname = "S2MPB02_LD15"; pin = <PIN_REGULATOR 1 1>; };
						50 { pname = "VDDIO_1.8V_SUB"; pin = <PIN_REGULATOR 1 1000>; };
						60 { pname = "on_i2c"; pin = <PIN_I2C 1 0>; };
						70 { pname = "sen_rst high"; pin = <PIN_OUTPUT 1 0>; gpio = <&gpg1 1 0x1>; };
						80 { pname = "pin"; pin = <PIN_FUNCTION 2 0>; };
						90 { pname = "MCLK"; pin = <PIN_MCLK 1 1000>; share = <SRT_ACQUIRE SHARED_PIN0 1>; };
					};

					scenario_normal_off {
						sensor_scenario = <SENSOR_SCENARIO_NORMAL>;
						gpio_scenario = <GPIO_SCENARIO_OFF>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 10>; gpio = <&gpg1 1 0x1>; };
						20 { pname = "off_i2c"; pin = <PIN_I2C 0 0>; };
						30 { pname = "S2MPB02_LD15"; pin = <PIN_REGULATOR 0 1>; };
						40 { pname = "VDDAF_2.8V_SUB"; pin = <PIN_REGULATOR 0 1>; };
						50 { pname = "VDDIO_1.8V_SUB"; pin = <PIN_REGULATOR 0 1>; };
						60 { pname = "VDDPHY_1.05V_CAM"; pin = <PIN_REGULATOR 0 100>; };
						70 { pname = "MCLK"; pin = <PIN_MCLK 0 1>; };
						80 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
						90 { pname = "pin"; pin = <PIN_FUNCTION 1 0>; };
						100 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; share = <SRT_RELEASE SHARED_PIN0 0>; };
					};

					scenario_vision_off {
						sensor_scenario = <SENSOR_SCENARIO_VISION>;
						gpio_scenario = <GPIO_SCENARIO_OFF>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 10>; gpio = <&gpg1 1 0x1>; };
						20 { pname = "off_i2c"; pin = <PIN_I2C 0 0>; };
						30 { pname = "S2MPB02_LD15"; pin = <PIN_REGULATOR 0 1>; };
						40 { pname = "VDDAF_2.8V_SUB"; pin = <PIN_REGULATOR 0 1>; };
						50 { pname = "VDDIO_1.8V_SUB"; pin = <PIN_REGULATOR 0 1>; };
						60 { pname = "VDDPHY_1.05V_CAM"; pin = <PIN_REGULATOR 0 100>; };
						70 { pname = "MCLK"; pin = <PIN_MCLK 0 1>; };
						80 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
						90 { pname = "pin"; pin = <PIN_FUNCTION 1 0>; };
						100 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; share = <SRT_RELEASE SHARED_PIN0 0>; };
					};
				};
			};

			/* Ultra Wide CAMERA */
			is_sensor_3p9: is_sensor_3p9@2D {
				pinctrl-names = "pin0", "pin1", "pin2", "release";
				pinctrl-0 = <>;
				pinctrl-1 = <&sensor_mclk1_out>;
				pinctrl-2 = <&sensor_mclk1_fn>;
				pinctrl-3 = <>;

				/* board */
				position = <4>; /* Rear:0. Front:1, Tele:2 */
				id = <4>; /* is_sensor id */
				mclk_ch = <1>;
				sensor_i2c_ch = <5>; /* SENSOR_CONTROL_I2C5 */

				af {
					product_name = <100>; /* NOTHING */
				};

				flash {
					product_name = <100>; /* NOTHING */
				};

				preprocessor {
					product_name = <100>; /* NOTHING */
				};

				ois {
					product_name = <100>; /* NOTHING */
				};

				power_seq {
					use = <1>;
					gpio_mclk = <&gpg0 3 0x1>;

					scenario_normal_on {
						sensor_scenario = <SENSOR_SCENARIO_NORMAL>;
						gpio_scenario = <GPIO_SCENARIO_ON>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 0>; gpio = <&gpm6 0 0x1>; };
						20 { pname = "VDDA_2.8V_WIDESUB"; pin = <PIN_REGULATOR 1 0>; };
						30 { pname = "VDDIO_1.8V_WIDESUB"; pin = <PIN_REGULATOR 1 0>; };
						40 { pname = "VDDD_1.05V_WIDESUB"; pin = <PIN_REGULATOR 1 0>; };
						50 { pname = "on_i2c"; pin = <PIN_I2C 1 0>; };
						60 { pname = "pin"; pin = <PIN_FUNCTION 2 0>; };
						70 { pname = "MCLK"; pin = <PIN_MCLK 1 0>; };
						80 { pname = "sen_rst high"; pin = <PIN_OUTPUT 1 0>; gpio = <&gpm6 0 0x1>; };
					};

					scenario_normal_off {
						sensor_scenario = <SENSOR_SCENARIO_NORMAL>;
						gpio_scenario = <GPIO_SCENARIO_OFF>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "VDDA_2.8V_WIDESUB"; pin = <PIN_REGULATOR 0 0>; };
						20 { pname = "VDDD_1.05V_WIDESUB"; pin = <PIN_REGULATOR 0 0>; };
						30 { pname = "MCLK"; pin = <PIN_MCLK 0 0>; };
						40 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
						50 { pname = "sen_rst"; pin = <PIN_OUTPUT 0 0>; gpio = <&gpm6 0 0x1>; };
						60 { pname = "off_i2c"; pin = <PIN_I2C 0 0>; };
						70 { pname = "VDDIO_1.8V_WIDESUB"; pin = <PIN_REGULATOR 0 0>; };
					};

					scenario_vision_on {
						sensor_scenario = <SENSOR_SCENARIO_VISION>;
						gpio_scenario = <GPIO_SCENARIO_ON>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 0>; gpio = <&gpm6 0 0x1>; };
						20 { pname = "VDDA_2.8V_WIDESUB"; pin = <PIN_REGULATOR 1 0>; };
						30 { pname = "VDDIO_1.8V_WIDESUB"; pin = <PIN_REGULATOR 1 0>; };
						40 { pname = "VDDD_1.05V_WIDESUB"; pin = <PIN_REGULATOR 1 0>; };
						50 { pname = "on_i2c"; pin = <PIN_I2C 1 0>; };
						60 { pname = "pin"; pin = <PIN_FUNCTION 2 0>; };
						70 { pname = "MCLK"; pin = <PIN_MCLK 1 0>; };
						80 { pname = "sen_rst high"; pin = <PIN_OUTPUT 1 0>; gpio = <&gpm6 0 0x1>; };
					};

					scenario_vision_off {
						sensor_scenario = <SENSOR_SCENARIO_VISION>;
						gpio_scenario = <GPIO_SCENARIO_OFF>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "VDDA_2.8V_WIDESUB"; pin = <PIN_REGULATOR 0 0>; };
						20 { pname = "VDDD_1.05V_WIDESUB"; pin = <PIN_REGULATOR 0 0>; };
						30 { pname = "MCLK"; pin = <PIN_MCLK 0 0>; };
						40 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
						50 { pname = "sen_rst"; pin = <PIN_OUTPUT 0 0>; gpio = <&gpm6 0 0x1>; };
						60 { pname = "off_i2c"; pin = <PIN_I2C 0 0>; };
						70 { pname = "VDDIO_1.8V_WIDESUB"; pin = <PIN_REGULATOR 0 0>; };
					};
				};
			};

			/* FRONT CAMERA */
			is_sensor_3h1: is_sensor_3h1@31 {
				pinctrl-names = "pin0", "pin1", "pin2", "release";
				pinctrl-0 = <>;
				pinctrl-1 = <&sensor_mclk2_out>;
				pinctrl-2 = <&sensor_mclk2_fn>;
				pinctrl-3 = <>;

				/* board */
				position = <1>;	/* Rear:0. Front:1. Rear_sub:2. Secure:3. */
				id = <1>; /* is_sensor id */
				mclk_ch = <2>;
				sensor_i2c_ch = <4>; /* SENSOR_CONTROL_I2C4 */

				/* peri*/
				af {
					product_name = <18>; /* ACTUATOR_NAME_AK737X */
					i2c_ch = <7>; /* SENSOR_CONTROL_I2C7 */
				};

				flash {
					product_name = <100>; /* NOTHING */
				};

				ois {
					product_name = <100>; /* NOTHING */
				};

				vc_extra {
					/* ex) statX = <stat_type, sensor_mode, max_width, max_height, max_element> */
					stat0 = </* not avaliable */>;									/* VC_BUF_DATA_TYPE_SENSOR_STAT1 */
					stat1 = </* not avaliable */>;									/* VC_BUF_DATA_TYPE_SENSOR_STAT1 */
					stat2 = </* not avaliable */>;									/* VC_BUF_DATA_TYPE_SENSOR_STAT2 */
					stat3 = </* not avaliable */>;									/* VC_BUF_DATA_TYPE_SENSOR_STAT2 */
				};

				power_seq {
					use = <1>;
					gpio_mclk = <&gpg0 4 0x1>;

					scenario_normal_on {
						sensor_scenario = <SENSOR_SCENARIO_NORMAL>;
						gpio_scenario = <GPIO_SCENARIO_ON>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 0>; gpio = <&gpm13 0 0x1>; };
						20 { pname = "VDDAF_2.8V_VT"; pin = <PIN_REGULATOR 1 1>; };
						30 { pname = "VDD_2.8V_VT"; pin = <PIN_REGULATOR 1 1>; };
						40 { pname = "VDDIO_1.8V_VT"; pin = <PIN_REGULATOR 1 1>; };
						50 { pname = "VDDD_1.05V_VT"; pin = <PIN_REGULATOR 1 1000>; };
						60 { pname = "on_i2c"; pin = <PIN_I2C 1 0>; };
						70 { pname = "sen_rst high"; pin = <PIN_OUTPUT 1 0>; gpio = <&gpm13 0 0x1>; };
						80 { pname = "pin"; pin = <PIN_FUNCTION 2 0>; };
						90 { pname = "MCLK"; pin = <PIN_MCLK 1 9000>; };
					};

					scenario_vision_on {
						sensor_scenario = <SENSOR_SCENARIO_VISION>;
						gpio_scenario = <GPIO_SCENARIO_ON>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 0>; gpio = <&gpm13 0 0x1>; };
						20 { pname = "VDDAF_2.8V_VT"; pin = <PIN_REGULATOR 1 1>; };
						30 { pname = "VDD_2.8V_VT"; pin = <PIN_REGULATOR 1 1>; };
						40 { pname = "VDDIO_1.8V_VT"; pin = <PIN_REGULATOR 1 1>; };
						50 { pname = "VDDD_1.05V_VT"; pin = <PIN_REGULATOR 1 1000>; };
						60 { pname = "on_i2c"; pin = <PIN_I2C 1 0>; };
						70 { pname = "sen_rst high"; pin = <PIN_OUTPUT 1 0>; gpio = <&gpm13 0 0x1>; };
						80 { pname = "pin"; pin = <PIN_FUNCTION 2 0>; };
						90 { pname = "MCLK"; pin = <PIN_MCLK 1 9000>; };
					};

					scenario_normal_off {
						sensor_scenario = <SENSOR_SCENARIO_NORMAL>;
						gpio_scenario = <GPIO_SCENARIO_OFF>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "MCLK"; pin = <PIN_MCLK 0 1>; };
						20 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
						30 { pname = "pin"; pin = <PIN_FUNCTION 1 0>; };
						40 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
						50 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 10>; gpio = <&gpm13 0 0x1>; };
						60 { pname = "off_i2c"; pin = <PIN_I2C 0 0>; };
						70 { pname = "VDDAF_2.8V_VT"; pin = <PIN_REGULATOR 0 1>; };
						80 { pname = "VDD_2.8V_VT"; pin = <PIN_REGULATOR 0 1>; };
						90 { pname = "VDDIO_1.8V_VT"; pin = <PIN_REGULATOR 0 1>; };
						100 { pname = "VDDD_1.05V_VT"; pin = <PIN_REGULATOR 0 100>; };
					};

					scenario_vision_off {
						sensor_scenario = <SENSOR_SCENARIO_VISION>;
						gpio_scenario = <GPIO_SCENARIO_OFF>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "MCLK"; pin = <PIN_MCLK 0 1>; };
						20 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
						30 { pname = "pin"; pin = <PIN_FUNCTION 1 0>; };
						40 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
						50 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 10>; gpio = <&gpm13 0 0x1>; };
						60 { pname = "off_i2c"; pin = <PIN_I2C 0 0>; };
						70 { pname = "VDDAF_2.8V_VT"; pin = <PIN_REGULATOR 0 1>; };
						80 { pname = "VDD_2.8V_VT"; pin = <PIN_REGULATOR 0 1>; };
						90 { pname = "VDDIO_1.8V_VT"; pin = <PIN_REGULATOR 0 1>; };
						100 { pname = "VDDD_1.05V_VT"; pin = <PIN_REGULATOR 0 100>; };
					};

					scenario_read_rom_on {
						sensor_scenario = <SENSOR_SCENARIO_READ_ROM>;
						gpio_scenario = <GPIO_SCENARIO_ON>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname; pin; gpio; };
						20 { pname; pin; gpio; };
					};

					scenario_read_rom_off {
						sensor_scenario = <SENSOR_SCENARIO_READ_ROM>;
						gpio_scenario = <GPIO_SCENARIO_OFF>;

						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname; pin; gpio; };
						20 { pname; pin; gpio; };
					};
				};
			};

			is_flash_s2mf301: is-flash-s2mf301@0 {
				compatible = "samsung,sensor-flash-s2mf301";
				sensor-module = <&is_sensor_2l4>;
				id = <0>;
				led_ch = <1>;
				status = "okay";
			};

			/* REAR CAMERA */
			is_sensor0: is_sensor0@15030000 {
				#address-cells = <1>;
				#size-cells = <1>;
				scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
				id = <0>;
				csi_ch = <0>;
				status = "okay";
				use_cphy = <0>;

				interrupts = <0 INTREQ__CSIS0 IRQ_TYPE_LEVEL_HIGH>; /*MIPI-CSI0 */
				interrupt-names = "csi";
				phys = <&mipi_phy_csis0_m0s4s4s4s4s2s1 0>;
				phy_setfile = <&d_phy_setfile>;
			};

			/* FRONT CAMERA */
			is_sensor1: is_sensor1@15040000 {
				#address-cells = <1>;
				#size-cells = <1>;
				reg = <0x0 0x15060000 0x1000>, /* MIPI-CSI3 */
					<0x0 0x150F0000 0x10000>; /* PHY: M0S4S4S4S4S2S1 */
				scenario = <SENSOR_SCENARIO_NORMAL>;    /* Normal, Vision, OIS etc */
				id = <1>;
				csi_ch = <3>;
				status = "okay";
				use_cphy = <0>;

				interrupts = <0 INTREQ__CSIS3 IRQ_TYPE_LEVEL_HIGH>; /* MIPI-CSI3 */
				interrupt-names = "csi";
				phys = <&mipi_phy_csis3_m0s4s4s4s4s2s1 0>;
				phy_setfile = <&d_phy_setfile>;
			};

			/* Tele CAMERA */
			is_sensor2: is_sensor2@15050000 {
				#address-cells = <1>;
				#size-cells = <1>;
				reg = <0x0 0x15040000 0x1000>, /* MIPI-CSI1 */
					<0x0 0x150F0000 0x10000>; /* PHY: M0S4S4S4S4S2S1 */
				scenario = <SENSOR_SCENARIO_NORMAL>;    /* Normal, Vision, OIS etc */
				id = <2>;
				csi_ch = <1>;
				status = "okay";

				interrupts = <0 INTREQ__CSIS1 IRQ_TYPE_LEVEL_HIGH>; /* MIPI-CSI1 */
				interrupt-names = "csi";
				phys = <&mipi_phy_csis1_m0s4s4s4s4s2s1 0>;
				phy_setfile = <&d_phy_setfile>;
			};

			/* ULTRA WIDE CAMERA */
			is_sensor4: is_sensor4@15070000 {
				#address-cells = <1>;
				#size-cells = <1>;
				reg = <0x0 0x15050000 0x1000>, /* MIPI-CSI2 */
					<0x0 0x150F0000 0x10000>; /* PHY: M0S4S4S4S4S2S1 */
				scenario = <SENSOR_SCENARIO_NORMAL>;    /* Normal, Vision, OIS etc */
				id = <4>;
				csi_ch = <2>;
				status = "okay";

				interrupts = <0 INTREQ__CSIS2 IRQ_TYPE_LEVEL_HIGH>; /* MIPI-CSI2 */
				phys = <&mipi_phy_csis2_m0s4s4s4s4s2s1 0>;
				phy_setfile = <&d_phy_setfile>;
			};

			/* FRONT2 CAMERA : 2+2 lane */
			is_sensor3: is_sensor3@15060000 {
				#address-cells = <1>;
				#size-cells = <1>;
				reg = <0x0 0x15070000 0x1000>, /* MIPI-CSI4 */
					<0x0 0x150F0000 0x10000>; /* PHY: M0S4S4S4S4S2S1 */
				scenario = <SENSOR_SCENARIO_NORMAL>;    /* Normal, Vision, OIS etc */
				id = <3>;
				csi_ch = <4>;
				status = "okay";

				interrupts = <0 INTREQ__CSIS4 IRQ_TYPE_LEVEL_HIGH>; /* MIPI-CSI2 */
				phys = <&mipi_phy_csis2_m0s4s4s4s4s2s1 0>;
				phy_setfile = <&phy_setfile_e>;
			};
		}; /* end of __overlay__ */
	}; /* end of fragment */
}; /* end of root */

/***** reference symbol node *****/
/* GPIO_PERI */
&pinctrl_1 {
	/* REAR WIDE : i2c1 */
	hsi2c29_bus: hsi2c29-bus {
		samsung,pins = "gpm17-0", "gpm18-0";
		samsung,pin-function = <2>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	hsi2c29_bus_in: hsi2c29-bus-in {
		samsung,pins = "gpm17-0", "gpm18-0";
		samsung,pin-function = <0>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	/* REAR TELE AF : i2c0 */
	hsi2c26_bus: hsi2c26-bus {
		samsung,pins = "gpm10-0", "gpm11-0";
		samsung,pin-function = <3>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	hsi2c26_bus_in: hsi2c26-bus-in {
		samsung,pins = "gpm10-0", "gpm11-0";
		samsung,pin-function = <0>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	/* REAR OIS i2c2 */
	hsi2c25_bus: hsi2c25-bus {
		samsung,pins = "gpm8-0", "gpm9-0";
		samsung,pin-function = <2>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	hsi2c25_bus_in: hsi2c25-bus-n {
		samsung,pins = "gpm8-0", "gpm9-0";
		samsung,pin-function = <0>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	/* REAR TELE : i2c0 */
	hsi2c30_bus: hsi2c30-bus {
		samsung,pins = "gpm19-0", "gpm20-0";
		samsung,pin-function = <3>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	hsi2c30_bus_in: hsi2c30-bus-in {
		samsung,pins = "gpm19-0", "gpm20-0";
		samsung,pin-function = <0>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	/* FRONT i2c4 */
	hsi2c21_bus: hsi2c21-bus {
		samsung,pins = "gpm0-0", "gpm1-0";
		samsung,pin-function = <2>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	hsi2c21_bus_in: hsi2c21-bus-in {
		samsung,pins = "gpm0-0", "gpm1-0";
		samsung,pin-function = <0>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	/* FRONT EEP/AF i2c7 */
	hsi2c22_bus: hsi2c22-bus {
		samsung,pins = "gpm2-0", "gpm3-0";
		samsung,pin-function = <3>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	hsi2c22_bus_in: hsi2c22-bus-in {
		samsung,pins = "gpm2-0", "gpm3-0";
		samsung,pin-function = <0>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	/* REAR UWIDE i2c5 */
	hsi2c23_bus: hsi2c23-bus {
		samsung,pins = "gpm4-0", "gpm5-0";
		samsung,pin-function = <2>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	hsi2c23_bus_in: hsi2c23-bus-in {
		samsung,pins = "gpm4-0", "gpm5-0";
		samsung,pin-function = <0>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

};

&hsi2c_29 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpm17 0 0 &gpm18 0 0>;
	status = "okay";
	clock-frequency = <1000000>;
	samsung,reset-before-trans;
	samsung,fast-plus-mode;

	pinctrl-names = "default","on_i2c","off_i2c";
	pinctrl-0 = <&hsi2c29_bus_in>;
	pinctrl-1 = <&hsi2c29_bus>;
	pinctrl-2 = <&hsi2c29_bus_in>;

	is-2l4@10 {
		compatible = "samsung,exynos-is-cis-2l4";
		sensor-module = <&is_sensor_2l4>;
		reg = <0x10>; /* 1 bit right shift */
		id = <0>; /* matching is_sensor id */
		setfile = "setB";
		status = "okay";
	};
};

&hsi2c_30 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpm19 0 0 &gpm20 0 0>;
	status = "okay";
	clock-frequency = <1000000>;
	samsung,reset-before-trans;
	samsung,fast-plus-mode;

	pinctrl-names = "default","on_i2c","off_i2c";
	pinctrl-0 = <&hsi2c30_bus_in>;
	pinctrl-1 = <&hsi2c30_bus>;
	pinctrl-2 = <&hsi2c30_bus_in>;

	is-3m5@10 {
		compatible = "samsung,exynos-is-cis-3m5";
		sensor-module = <&is_sensor_3m5>;
		reg = <0x2D>; /* 1 bit right shift */
		id = <2>; /* matching is_sensor id */
		setfile = "setC";
		status = "okay";
	};
};

&hsi2c_21 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpm0 0 0 &gpm1 0 0>;
	status = "okay";
	clock-frequency = <1000000>;
	samsung,reset-before-trans;
	samsung,fast-plus-mode;

	pinctrl-names = "default","on_i2c","off_i2c";
	pinctrl-0 = <&hsi2c21_bus_in>;
	pinctrl-1 = <&hsi2c21_bus>;
	pinctrl-2 = <&hsi2c21_bus_in>;

	is-3h1@35 {
		compatible = "samsung,exynos-is-cis-3h1";
		sensor-module = <&is_sensor_3h1>;
		reg = <0x35>; /* 1 bit right shift */
		id = <1>; /* matching is_sensor id */
		setfile = "setA";
		status = "okay";
	};
};

&hsi2c_23 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpm4 0 0 &gpm5 0 0>;
	status = "okay";
	clock-frequency = <1000000>;
	samsung,reset-before-trans;
	samsung,fast-plus-mode;

	pinctrl-names = "default","on_i2c","off_i2c";
	pinctrl-0 = <&hsi2c23_bus_in>;
	pinctrl-1 = <&hsi2c23_bus>;
	pinctrl-2 = <&hsi2c23_bus_in>;

	is-3p9@2d {
		compatible = "samsung,exynos-is-cis-3p9";
		sensor-module = <&is_sensor_3p9>;
		reg = <0x2d>; /* 1 bit right shift */
		id = <4>; /* matching is_sensor id */
		setfile = "setA";
		status = "okay";
	};
};

&hsi2c_25 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpm8 0 0 &gpm9 0 0>;
	status = "okay";
	clock-frequency = <1000000>;
	samsung,reset-before-trans;
	samsung,fast-plus-mode;

	pinctrl-names = "default","on_i2c","off_i2c";
	pinctrl-0 = <&hsi2c25_bus_in>;
	pinctrl-1 = <&hsi2c25_bus>;
	pinctrl-2 = <&hsi2c25_bus_in>;

	/* for OIS */
#if 0
	is-dummy@01 {
		compatible = "samsung,exynos-is-dummy";
		reg = <0x10>;
		status = "okay";
	};
#endif
};

&hsi2c_26 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpm10 0 0 &gpm11 0 0>;
	status = "okay";
	clock-frequency = <1000000>;
	samsung,reset-before-trans;
	samsung,fast-plus-mode;

	pinctrl-names = "default","on_i2c","off_i2c";
	pinctrl-0 = <&hsi2c26_bus_in>;
	pinctrl-1 = <&hsi2c26_bus>;
	pinctrl-2 = <&hsi2c26_bus_in>;

	is-actuator@0C { /* wide AF */
		compatible = "samsung,exynos-is-actuator-ak737x";
		sensor-module = <&is_sensor_2l4>;
		reg = <0x0C>;
		id = <0>; /* matching is_sensor id */
		/* AK737x: addr 0xF3, data 0x0E */
		vendor_product_id = <0xF3 0x0E 0xF3 0x13 0xF3 0x00>;
		vendor_first_pos = <120>;
		vendor_first_delay = <2000>;
		vendor_use_sleep_mode;
		status = "okay";
	};

	is-actuator@0F {
		compatible = "samsung,exynos-is-actuator-ak737x";
		sensor-module = <&is_sensor_3m5>;
		reg = <0x0F>;
		id = <2>; /* matching is_sensor id */
		/* AK7377: addr 0xF3, data 0x0E */
		vendor_product_id = <0xF3 0x0E 0xF3 0x13 0xF3 0x00>;
		vendor_first_pos = <120>;
		vendor_first_delay = <2000>;
		vendor_use_sleep_mode;
		status = "okay";
	};
};

&hsi2c_22 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpm2 0 0 &gpm3 0 0>;
	status = "okay";
	clock-frequency = <1000000>;
	samsung,reset-before-trans;
	samsung,fast-plus-mode;

	pinctrl-names = "default","on_i2c","off_i2c";
	pinctrl-0 = <&hsi2c22_bus_in>;
	pinctrl-1 = <&hsi2c22_bus>;
	pinctrl-2 = <&hsi2c22_bus_in>;

	is-actuator@0C {
		compatible = "samsung,exynos-is-actuator-ak737x";
		sensor-module = <&is_sensor_3h1>;
		reg = <0x0C>;
		id = <1>; /* matching is_sensor id */
		/* AK737x: addr 0xF3, data 0x0E */
		vendor_product_id = <0xF3 0x0E 0xF3 0x13 0xF3 0x00>;
		vendor_first_pos = <120>;
		vendor_first_delay = <2000>;
		vendor_use_sleep_mode;
		status = "okay";
	};
};

&exynos_is {
	vender {
		sensor_name { /* sensor_dev_id = "name" */
			0 = "2L4";
			1 = "3H1";
			2 = "3M5";
			4 = "3P9";
		};
	};

	lic_offsets {
		/* 3AA = <setA lic offset0, setA lic offset1, set A trigger context */
		/*		setB lic offset0, setB lic offset1, set B trigger context> */
		/* 4672: 4640x4352 */
		/* 5824: 5804x4352 */
		3AA = <5461 10922 0 5461 10922 0>;
	};

	buffer_info {
		ypp_buf_max_width = <4608>;	/* defalut value : 5760 */
	};

	is_dvfs {
		#define CPU_CL0	"0-5"
		#define CPU_CL1	"6-7"
		#define CPU_ALL	"0-7"

		table0 {
			desc = "dvfs table v0.2";

			default_cam = <0>;
			default_isp = <0>;
			default_mif = <0>;
			default_int = <0>;
			default_cpu = CPU_CL0;

			rear_single_photo_mif = <3>;
			rear_single_photo_int = <3>;
			rear_single_photo_cpu = CPU_CL0;

			rear_single_photo_full_mif = <2>;
			rear_single_photo_full_int = <3>;
			rear_single_photo_full_cpu = CPU_CL0;

			rear_single_video_fhd30_mif = <3>;
			rear_single_video_fhd30_int = <4>;
			rear_single_video_fhd30_cpu = CPU_CL0;

			rear_single_videohdr_mif = <0>;
			rear_single_videohdr_int = <0>;
			rear_single_videohdr_cpu = CPU_CL0;

			rear_single_video_fhd60_mif = <1>;
			rear_single_video_fhd60_int = <4>;
			rear_single_video_fhd60_cpu = CPU_CL0;

			rear_single_video_uhd30_mif = <1>;
			rear_single_video_uhd30_int = <3>;
			rear_single_video_uhd30_cpu = CPU_CL0;

			rear_single_video_uhd60_mif = <0>;
			rear_single_video_uhd60_int = <0>;
			rear_single_video_uhd60_cpu = CPU_CL0;

			rear_single_capture_isp = <1>;
			rear_single_capture_mif = <0>;
			rear_single_capture_int = <0>;
			rear_single_capture_cpu = CPU_CL0;

			rear_single_video_fhd120_mif = <0>;
			rear_single_video_fhd120_int = <3>;
			rear_single_video_fhd120_cpu = CPU_CL0;

			rear_single_video_fhd240_mif = <0>;
			rear_single_video_fhd240_int = <0>;
			rear_single_video_fhd240_hpg = <8>;
			rear_single_video_fhd240_cpu = CPU_CL0;

			rear_single_video_fhd480_mif = <0>;
			rear_single_video_fhd480_int = <0>;
			rear_single_video_fhd480_cpu = CPU_CL0;

			rear_single_video_hd240_mif = <0>;
			rear_single_video_hd240_int = <3>;
			rear_single_video_hd240_hpg = <8>;
			rear_single_video_hd240_cpu = CPU_CL0;

			rear_single_ssm_isp = <0>;
			rear_single_ssm_mif = <0>;
			rear_single_ssm_int = <0>;
			rear_single_ssm_cpu = CPU_CL0;

			rear_single_video_8k24_mif = <0>;
			rear_single_video_8k24_int = <0>;
			rear_single_video_8k24_cpu = CPU_CL0;

			rear_single_video_8k30_mif = <0>;
			rear_single_video_8k30_int = <0>;
			rear_single_video_8k30_cpu = CPU_CL0;

			rear_single_remosaic_photo_mif = <0>;
			rear_single_remosaic_photo_int = <0>;
			rear_single_remosaic_photo_cpu = CPU_CL0;

			rear_single_remosaic_capture_isp = <0>;
			rear_single_remosaic_capture_mif = <0>;
			rear_single_remosaic_capture_int = <0>;
			rear_single_remosaic_capture_cpu = CPU_CL0;

			rear_single_fastae_mif = <0>;
			rear_single_fastae_int = <0>;
			rear_single_fastae_cpu = CPU_CL0;

			rear_dual_tele_ultrawide_photo_mif = <0>;
			rear_dual_tele_ultrawide_photo_int = <0>;
			rear_dual_tele_ultrawide_photo_cpu = CPU_CL0;

			rear_dual_wide_tele_photo_mif = <0>;
			rear_dual_wide_tele_photo_int = <0>;
			rear_dual_wide_tele_photo_cpu = CPU_CL0;

			rear_dual_wide_tele_video_fhd30_mif = <0>;
			rear_dual_wide_tele_video_fhd30_int = <0>;
			rear_dual_wide_tele_video_fhd30_cpu = CPU_CL0;

			rear_dual_wide_tele_video_uhd30_mif = <0>;
			rear_dual_wide_tele_video_uhd30_int = <0>;
			rear_dual_wide_tele_video_uhd30_cpu = CPU_CL0;

			rear_dual_wide_tele_capture_isp = <0>;
			rear_dual_wide_tele_capture_mif = <0>;
			rear_dual_wide_tele_capture_int = <0>;
			rear_dual_wide_tele_capture_cpu = CPU_CL0;

			rear_dual_wide_ultrawide_photo_mif = <0>;
			rear_dual_wide_ultrawide_photo_int = <0>;
			rear_dual_wide_ultrawide_photo_cpu = CPU_CL0;

			rear_dual_wide_ultrawide_video_fhd30_mif = <0>;
			rear_dual_wide_ultrawide_video_fhd30_int = <0>;
			rear_dual_wide_ultrawide_video_fhd30_cpu = CPU_CL0;

			rear_dual_wide_ultrawide_video_uhd30_mif = <0>;
			rear_dual_wide_ultrawide_video_uhd30_int = <0>;
			rear_dual_wide_ultrawide_video_uhd30_cpu = CPU_CL0;

			rear_dual_wide_ultrawide_capture_isp = <0>;
			rear_dual_wide_ultrawide_capture_mif = <0>;
			rear_dual_wide_ultrawide_capture_int = <0>;
			rear_dual_wide_ultrawide_capture_cpu = CPU_CL0;

			triple_photo_mif = <0>;
			triple_photo_int = <0>;
			triple_photo_cpu = CPU_CL0;

			triple_video_fhd30_mif = <0>;
			triple_video_fhd30_int = <0>;
			triple_video_fhd30_cpu = CPU_CL0;

			triple_video_uhd30_mif = <0>;
			triple_video_uhd30_int = <0>;
			triple_video_uhd30_cpu = CPU_CL0;

			triple_video_fhd60_mif = <0>;
			triple_video_fhd60_int = <0>;
			triple_video_fhd60_cpu = CPU_CL0;

			triple_video_uhd60_mif = <0>;
			triple_video_uhd60_int = <0>;
			triple_video_uhd60_cpu = CPU_CL0;

			triple_capture_isp = <0>;
			triple_capture_mif = <0>;
			triple_capture_int = <0>;
			triple_capture_cpu = CPU_CL0;

			front_single_photo_mif = <2>;
			front_single_photo_int = <3>;
			front_single_photo_cpu = CPU_CL0;

			front_single_photo_full_mif = <2>;
			front_single_photo_full_int = <3>;
			front_single_photo_full_cpu = CPU_CL0;

			front_single_video_fhd30_mif = <2>;
			front_single_video_fhd30_int = <3>;
			front_single_video_fhd30_cpu = CPU_CL0;

			front_single_video_uhd30_mif = <1>;
			front_single_video_uhd30_int = <3>;
			front_single_video_uhd30_cpu = CPU_CL0;

			front_single_video_fhd60_mif = <1>;
			front_single_video_fhd60_int = <3>;
			front_single_video_fhd60_cpu = CPU_CL0;

			front_single_video_uhd60_mif = <0>;
			front_single_video_uhd60_int = <0>;
			front_single_video_uhd60_cpu = CPU_CL0;

			front_single_capture_isp = <2>;
			front_single_capture_mif = <2>;
			front_single_capture_int = <1>;
			front_single_capture_cpu = CPU_CL0;

			front_single_vt_mif = <2>;
			front_single_vt_int = <3>;
			front_single_vt_cpu = CPU_CL0;

			front_single_video_fhd120_mif = <0>;
			front_single_video_fhd120_int = <0>;
			front_single_video_fhd120_cpu = CPU_CL0;

			pip_dual_photo_mif = <0>;
			pip_dual_photo_int = <0>;
			pip_dual_photo_cpu = CPU_CL0;

			pip_dual_capture_isp = <0>;
			pip_dual_capture_mif = <0>;
			pip_dual_capture_int = <0>;
			pip_dual_capture_cpu = CPU_CL0;

			pip_dual_video_fhd30_mif = <0>;
			pip_dual_video_fhd30_int = <0>;
			pip_dual_video_fhd30_cpu = CPU_CL0;

			ext_rear_single_cam = <0>;
			ext_rear_single_isp = <0>;
			ext_rear_single_mif = <0>;
			ext_rear_single_int = <0>;
			ext_rear_single_cpu = CPU_CL0;

			ext_front_secure_cam = <0>;
			ext_front_secure_isp = <0>;
			ext_front_secure_mif = <0>;
			ext_front_secure_int = <0>;
			ext_front_secure_cpu = CPU_CL0;

			ext_throttling_cam = <0>;
			ext_throttling_isp = <0>;
			ext_throttling_mif = <2>;
			ext_throttling_int = <0>;
			ext_throttling_hpg = <0>;
			ext_throttling_cpu = CPU_CL0;

			max_cam = <0>;
			max_isp = <0>;
			max_mif = <0>;
			max_int = <0>;
			max_cpu = CPU_CL0;
		};
	};
};
